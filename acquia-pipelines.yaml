
version: 1.0.0

variables:
  global:
    N3_KEY: 1dc88f01-117f-4c6b-bab3-28629e42f8f7
    N3_SECRET:
      secure: 2ac03l0YHqh2wyXDffI8ejsUTqvoWofgmkZhxz+IjvsfIobY/KGs49Cnts5IUlW/LL2+yJY5TrvWVRDNGoxVpV/PwFzEbXfo+gSu1T7VW2/+c2IcyEjMF3LhNirGpCbqIdlnN0AzxzdQK0mstMDsbJ+ZlzksvrLMJMWryQE+NgqoJJeGD+IojGkcYaNZRAz+IOtKb/upoBl+sAgGm7H7LyNtiHJQ675jQz6dZ70iZrQOTEnO9eeT1wi5ZAUBIN5ENGqt91BDkfCs4HbkjWcOts1bGQNuosQQOoyw95TDdzxQxo7Nf42rCbqXzbOSG0/HKEdeNldopfao9oPCjFebJLA8WzNkCJDbNn+sz7mm1EFM1rSXVUS/qZ/Bt0biDrPJ8biKNkyPVHH+kUylDCJ9A9aHCPgl6bh+gXSQLUSleWdbQ9usDeZGtbyjm9ttQBilGEFkKDYrw+hzoWsw/BQ86HDBhDNSX5je8IZTEYcVSWfYhWjdFI1f9wK9EaA2dX0MrENs0Yx3Yfp5lzx7Lp8Zy8oaelYJeaUguxajl7+EShZLaD+Qkfg4+8uy0qBdjrZJHczCTcsPlAD4n8ViKoAhGps7gFyNOEeMTJmfKV8zOciQCSxaisggHCbOfzEZJeyY0wBbU1qlG7UTwRDCpFdpcJ06xl0TwrpXjUa/zA50b0m5Is=5KlT8bAhfZAqYuB+h51fw/1/EctdWeYscJNaA7froI/52DjYZee/Krom+AS9QVTHGmZobLP5IfzRyxsAf1eYWWQOJ31islycCY4TKKxDPEEaPxQgIrOl3uGtKCB7B48QOl3IjuLE6KAR2VW/j7Sx6Zg14rtljbDhUY6bvY1wY9o=
    PIPELINES_API_URI: https://pipeline-api-production.pipeline.services.acquia.io
events:
  build:
    steps:
      # Install npm and the ng CLI tool.
      - install:
          script:
            - nvm install v6.9.5 # lts/boron
            - nvm use 6.9.5
            - npm install

      # Install dependencies and build the app into a temp directory.
      - lint:
          script:
            - npm run lint
      - test:
          script:
            - npm test
            - npm run integration
            - npm run e2e
      - build:
          script:
            - npm run pipelines:build:$PIPELINE_VCS_PATH

      # Put the build, index.php, and .htaccess into docroot.
      - copy_dist:
          script:
            - set -x
            - cd environments && composer install && cd ..
            - rm -rf ./docroot
            - mkdir ./docroot
            - cp -r /tmp/build/* ./docroot
            - cp .htaccess ./docroot
            - cp index.php ./docroot
            - cp -r server ./docroot
            - cp -r environments/vendor ./docroot/server/vendor

      # Deploy the build to an ODE.
      #
      # This is the pre-integrated POC approach for this, which Pipelines UI
      # is using as a guinea pig.
      - deploy:
          script:
            - cd environments
            - composer install
            - PIPELINES_EVENT=build php cloud-ode.php

      # Acceptance Testing only on production builds
      - acceptance:
          script:
            - \[ $PIPELINE_VCS_PATH == "production" \] && npm run integration:acceptance || echo "Integration Acceptance only in Production"
            - \[ $PIPELINE_VCS_PATH == "production" \] && npm run e2e:acceptance || echo "E2E Acceptance only in Production"
  merge:
    steps:
      # Delete ODEs when the source branch is merged.
      #
      # This is the pre-integrated POC approach for this, which Pipelines UI
      # is using as a guinea pig.
      - deploy:
          script:
            - cd environments
            - composer install
            - php cloud-ode.php
