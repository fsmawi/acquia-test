////
/// Responsive functions
///
/// @group core
////

/// Responsive Media Query builder.
///
/// Builds an associative map of strings to match default breakpoints.
///
/// @example scss - Respond mixin
///   responsive-media-condition-translate('screen', 'small', 'less-than-large') {
///     $content
///   }
///
/// @param {String} $c - A string that corresponds to a preset value.
@function responsive-media-condition-translate($c) {
  $conditions: (
    "screen": "only screen",
    "print": "only print",
    "retina": "(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-device-pixel-ratio: 1.5), (min-resolution: 120dpi)",
    "less-than-small": "(max-width: #{$responsive-media-small - .0625rem})",
    "small": "(min-width: #{$responsive-media-small})",
    "less-than-medium": "(max-width: #{$responsive-media-medium - .0625rem})",
    "medium": "(min-width: #{$responsive-media-medium})",
    "less-than-medium-large": "(max-width: #{$responsive-media-medium-large - .0625rem})",
    "medium-large": "(min-width: #{$responsive-media-medium-large})",
    "less-than-large": "(max-width: #{$responsive-media-large - .0625rem})",
    "large": "(min-width: #{$responsive-media-large})",
    "less-than-extra-large": "(max-width: #{$responsive-media-extra-large - .0625rem})",
    "extra-large": "(min-width: #{$responsive-media-extra-large})"
  );
  @return map-get($conditions, $c);
}
